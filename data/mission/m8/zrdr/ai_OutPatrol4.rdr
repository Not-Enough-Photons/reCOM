((
  ANIMATION_DEFINITIONS(
   ANIMATION_LIST(
    ANIMATION_DEFINITION(
     ANIMATION_NAME(OutPatrol4_special)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(seq_0)
     
     ai::SPECIAL()
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     ANIMATION_NAME(OutPatrol4_start)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(startup)
     
     ai::DEBUG("starting startup" )
     
     WHILE(
       !VALVE(comerunning==10.000000)
      
      )
     
     END_WHILE()
     
     ai::PARAM(aware=20.000000)
     
     WHILE(TRUE)
     
     END_WHILE()
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_aware0)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("starting on_aware0" )
     
     ai::HOLD(
       wait(200.000000250.000000)
      
      )
     
     WHILE(TRUE)
     
     ai::GOTO(
       node(Outp4A)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::GOTO(
       node(Outp4B)
      
      speed(0.000000)
      
      )
     
     ai::ANIMATE(
       anim("Cold shrug01" )
      
      postwait(0.000000)
      
      )
     
     ai::MACRO(
       anim(Patrol_banter)
      
      blocking)
     
     ai::HOLD(
       wait(200.000000250.000000)
      
      )
     
     ai::GOTO(
       node(Outp4A)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::GOTO(
       node(Outp4_start)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::GOTO(
       node(Outp4C)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::GOTO(
       node(Outp4D)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::GOTO(
       node(Outp4E)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::ANIMATE(
       anim("Cold shrug02" )
      
      postwait(0.000000)
      
      )
     
     ai::MACRO(
       anim(Patrol_banter)
      
      blocking)
     
     ai::GOTO(
       node(Outp4D)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(100.000000150.000000)
      
      )
     
     ai::GOTO(
       node(Outp4C)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     ai::GOTO(
       node(Outp4_start)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(30.00000050.000000)
      
      )
     
     END_WHILE()
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_aware1)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_aware1" )
     
     ai::MACRO(
       anim(Close_call)
      
      blocking)
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_aware2)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_aware2" )
     
     WAIT(0.000000)
     
     ai::MACRO(
       anim(Spot_shout)
      
      blocking)
     
     VALVE(call_out=10.000000)
     
     IF(
       VALVE(comerunning==100.000000)
      
      &&VALVE(Out4==00.000000)
      
      )
     
     ai::SIGNAL(
       signal(AISIG_BEGINCRITICAL)
      
      )
     
     ai::GOTO(
       node(Alarm1)
      
      speed(0.000000)
      
      )
     
     ai::GOTO(
       node(Alarm2)
      
      speed(0.000000)
      
      )
     
     ai::GOTO(
       node(Alarm3)
      
      speed(0.000000)
      
      )
     
     ai::GOTO(
       node(Alarm4)
      
      speed(0.000000)
      
      )
     
     ai::GOTO(
       node(Alarm5)
      
      speed(0.000000)
      
      )
     
     ai::GOTO(
       node(Alarm6)
      
      speed(0.000000)
      
      )
     
     ai::GOTO(
       node(Alarm74)
      
      speed(0.000000)
      
      )
     
     VALVE(Out4=10.000000)
     
     ai::SIGNAL(
       signal(AISIG_ENDCRITICAL)
      
      )
     
     ELSE()
     
     WHILE(TRUE)
     
     ai::GOTO(
       node(Outp4A)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4B)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4A)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4_start)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4C)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4D)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4E)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4D)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4C)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     ai::GOTO(
       node(Outp4_start)
      
      speed(0.000000)
      
      )
     
     ai::HOLD(
       wait(10.00000020.000000)
      
      )
     
     END_WHILE()
     
     ENDIF()
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_aware3)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_aware3" )
     
     WAIT(0.000000)
     
     ai::MACRO(
       anim(Spot_shout)
      
      blocking)
     
     VALVE(call_out=10.000000)
     
     ai::MACRO(
       anim(Patrol_guns)
      
      blocking)
     
     IF(
       RANDOM_WEIGHT(0.000000)
      
      )
     
     ai::STANCE(
       stance(Crouch)
      
      )
     
     ai::PURSUE(
       duration(0.000000)
      
      )
     
     ELSEIF(
       RANDOM_WEIGHT(0.000000)
      
      )
     
     ai::STANCE(
       stance(Stand)
      
      )
     
     ai::PURSUE(
       duration(0.000000)
      
      )
     
     ELSE()
     
     ai::STANCE(
       stance(Prone)
      
      )
     
     ENDIF()
     
     ai::STANCE(
       stance(Prone)
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_aware4)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_aware4" )
     
     WAIT(0.000000)
     
     VALVE(call_out=10.000000)
     
     ai::MACRO(
       anim(Spot_shout)
      
      blocking)
     
     ai::MACRO(
       anim(Patrol_guns)
      
      blocking)
     
     ai::COMM(
       team(80.000000)
      
      cmd(CMD_AWAKE)
      
      )
     
     IF(
       RANDOM_WEIGHT(0.000000)
      
      )
     
     ai::STANCE(
       stance(Crouch)
      
      )
     
     ai::PURSUE(
       duration(0.000000)
      
      )
     
     ELSEIF(
       RANDOM_WEIGHT(0.000000)
      
      )
     
     ai::STANCE(
       stance(Stand)
      
      )
     
     ai::PURSUE(
       duration(0.000000)
      
      )
     
     ELSE()
     
     ai::STANCE(
       stance(Prone)
      
      )
     
     ENDIF()
     
     ai::STANCE(
       stance(Prone)
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_lowhealth)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_lowhealth" )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_noammo)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_noammo" )
     
     ai::STANCE(
       stance(prone)
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(on_corpse)
     
     ACTIVATION(ON_CALL)
     
     ai::DEBUG("Starting on_corpse" )
     
     WAIT(0.000000)
     
     VALVE(call_out=10.000000)
     
     ai::ANIMATE(
       anim(Kicklow)
      
      postwait(0.000000)
      
      )
     
     )
    
    )
   
   )
  
  )
 
 )

)

