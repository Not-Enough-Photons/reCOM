((
  ANIMATION_DEFINITIONS(
   GRAVITY(-nan)
  
  ANIMATION_LIST(
    ANIMATION_DEFINITION(
     ANIMATION_NAME(alarm_off)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(seq_0)
     
     IF(
       VALVE(INPUT_VALVE==10.000000)
      
      )
     
     ai::DOOR(
       node(INPUT_NODE)
      
      ofs(0.0000000.0000000.000000)
      
      dist(0.000000)
      
      )
     
     ai::ANIMATE(
       anim("Flipswitch reverse" )
      
      postwait(0.000000)
      
      )
     
     ai::EVENT(
       node(INPUT_NODE)
      
      pos(0.0000000.000000-13-0.000000)
      
      range(0.000000)
      
      duration(0.000000)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_switch_up)
      
      )
     
     VALVE(INPUT_VALVE=00.000000)
     
     ELSE()
     
     ai::DOOR(
       node(INPUT_NODE)
      
      ofs(0.0000000.0000000.000000)
      
      dist(0.000000)
      
      )
     
     ai::ANIMATE(
       anim(Flipswitch)
      
      postwait(0.000000)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_switch_down)
      
      )
     
     VALVE(INPUT_VALVE=10.000000)
     
     ENDIF()
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(alarmswitch)
    
    ANIMATION_NAME(alarm_switch_down)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      OBJECT_MOTION_FROM_TO(
       NAME(LOCALswitch)
      
      ROTATE_FROM(0.0000000.0000000.000000)
      
      ROTATE_TO(0.0000000.0000000.000000)
      
      RUN_TIME(0.000000)
      
      )
     
     CALL_ANIMATION(
       NAME(stop_alarm_ls)
      
      )
     
     STOP_ANIMATION(
       NAME(alarm_light)
      
      )
     
     WAIT(0.000000)
     
     OBJECT_ACTIVE_STATE(
       NAME(lighton)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(alarmlight)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(lightoff)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(lightoff_green)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(lighton_green)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(alarmlight_green)
      
      STATE(INACTIVE)
      
      )
     
     CALL_ANIMATION(
       NAME(trip_wires_off)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_off)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(alarmswitch)
    
    ANIMATION_NAME(alarm_switch_up)
    
    ACTIVATION(ON_STARTUP)
    
    SEQUENCE_DEFINITION(
      WAIT(0.000000)
     
     OBJECT_MOTION_FROM_TO(
       NAME(LOCALswitch)
      
      ROTATE_FROM(0.0000000.0000000.000000)
      
      ROTATE_TO(0.0000000.0000000.000000)
      
      RUN_TIME(0.000000)
      
      )
     
     WAIT(0.000000)
     
     OBJECT_ACTIVE_STATE(
       NAME(lighton_green)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(lightoff_green)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(alarmlight_green)
      
      STATE(ACTIVE)
      
      )
     
     CALL_ANIMATION(
       NAME(stop_alarm_ls)
      
      )
     
     CALL_ANIMATION(
       NAME(single_alarm_range)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire01)
    
    ANIMATION_NAME(alarm_triggers_on)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(start_ranges)
     
     STOP_ANIMATION(
       NAME(single_alarm_range)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_on_01)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_on_02)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_on_03)
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(start_beam)
     
     CALL_ANIMATION(
       NAME(trip_wire_on01)
      
      )
     
     CALL_ANIMATION(
       NAME(trip_wire_on02)
      
      )
     
     CALL_ANIMATION(
       NAME(trip_wire_on03)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(alarmhorn)
    
    ANIMATION_NAME(thealarm_sound)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      SOUND(
       START()
      
      STOP_ON_EXIT()
      
      NAME(SND_ALARM_LOOP)
      
      AT_NODE(alarmhorn)
      
      )
     
     WHILE(TRUE)
     
     ai::EVENT(
       node(alarmhorm)
      
      type(ALARM)
      
      duration(0.000000)
      
      range(0.000000)
      
      )
     
     WAIT(0.000000)
     
     END_WHILE()
     
     )
    
    SEQUENCE_DEFINITION(
      CALL_ANIMATION(
       NAME(screensaveron)
      
      )
     
     WAIT(0.000000)
     
     SOUND(
       NAME(SND_VM08_49)
      
      START()
      
      )
     
     WAIT(0.000000)
     
     SOUND(
       NAME(MUS_M8_ALARM)
      
      MUSIC_EVENT()
      
      START()
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      WHILE(TRUE)
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlight)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlightbox_on)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlightbox_off)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(flare1)
      
      STATE(ACTIVE)
      
      )
     
     WAIT(0.000000)
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlight)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlightbox_on)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlightbox_off)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(flare1)
      
      STATE(INACTIVE)
      
      )
     
     WAIT(0.000000)
     
     END_WHILE()
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(alarmhorn)
    
    ANIMATION_NAME(stop_alarm_ls)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      STOP_ANIMATION(
       NAME(thealarm_sound)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlight)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlightbox_on)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(hornlightbox_off)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(flare1)
      
      STATE(INACTIVE)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(alarmswitch)
    
    ANIMATION_NAME(alarm_light)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      WHILE(TRUE)
     
     OBJECT_ACTIVE_STATE(
       NAME(lighton)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(alarmlight)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(lightoff)
      
      STATE(ACTIVE)
      
      )
     
     WAIT(0.000000)
     
     OBJECT_ACTIVE_STATE(
       NAME(lighton)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(alarmlight)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(lightoff)
      
      STATE(INACTIVE)
      
      )
     
     WAIT(0.000000)
     
     END_WHILE()
     
     )
    
    SEQUENCE_DEFINITION(
      OBJECT_ACTIVE_STATE(
       NAME(alarmlight_green)
      
      STATE(INACTIVE)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire**)
    
    ANIMATION_NAME(alarm_on_**)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(alarm_trip_test)
     
     CALL_ANIMATION(
       NAME(tripwire_on_**)
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(alarm_trip_test)
     
     WHILE(TRUE)
     
     IF(
       RANGE_TEST(
        P1(
         NODE(GLOBALplayer)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_SEQUENCE(
       NAME(start_alarm)
      
      )
     
     ELSEIF(
       RANGE_TEST(
        P1(
         NODE(GLOBALHutchins)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_SEQUENCE(
       NAME(start_alarm)
      
      )
     
     ELSEIF(
       RANGE_TEST(
        P1(
         NODE(GLOBALBailey)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_SEQUENCE(
       NAME(start_alarm)
      
      )
     
     ELSEIF(
       RANGE_TEST(
        P1(
         NODE(GLOBALDiMone)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_SEQUENCE(
       NAME(start_alarm)
      
      )
     
     ENDIF()
     
     WAIT(0.000000)
     
     END_WHILE()
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(start_alarm)
     
     ACTIVATION(ON_CALL)
     
     VALVE(comerunning=10.000000)
     
     STOP_SEQUENCE(
       NAME(alarm_trip_test)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_light)
      
      )
     
     CALL_ANIMATION(
       NAME(thealarm_sound)
      
      )
     
     VALVE(SinglePlay=10.000000)
     
     ui::UI_COMMAND(
       TYPE(PlayMPEG)
      
      ARGUMENT(run/movies/m8/klaxon.pss)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_off)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     ANIMATION_NAME(manual_alarm)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(start_alarm)
     
     VALVE(comerunning=10.000000)
     
     STOP_ANIMATION(
       NAME(single_alarm_range)
      
      )
     
     STOP_ANIMATION(
       NAME(alarm_on_01)
      
      )
     
     STOP_ANIMATION(
       NAME(alarm_on_02)
      
      )
     
     STOP_ANIMATION(
       NAME(alarm_on_03)
      
      )
     
     STOP_ANIMATION(
       NAME(tripwire_on_01)
      
      )
     
     STOP_ANIMATION(
       NAME(tripwire_on_02)
      
      )
     
     STOP_ANIMATION(
       NAME(tripwire_on_03)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_light)
      
      )
     
     CALL_ANIMATION(
       NAME(thealarm_sound)
      
      )
     
     ui::UI_COMMAND(
       TYPE(PlayMPEG)
      
      ARGUMENT(run/movies/m8/klaxon.pss)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_off)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire**)
    
    ANIMATION_NAME(alarm_off_**)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(alarm_trip_test)
     
     STOP_ANIMATION(
       NAME(alarm_on_**)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire01)
    
    ANIMATION_NAME(alarm_triggers_off)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(stop_ranges)
     
     CALL_ANIMATION(
       NAME(alarm_off_01)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_off_02)
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_off_03)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire01)
    
    ANIMATION_NAME(trip_wires_off)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(stop_beam)
     
     CALL_ANIMATION(
       NAME(trip_wire_off01)
      
      )
     
     CALL_ANIMATION(
       NAME(trip_wire_off02)
      
      )
     
     CALL_ANIMATION(
       NAME(trip_wire_off03)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire**)
    
    ANIMATION_NAME(trip_wire_off**)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(turnoffbeam)
     
     STOP_ANIMATION(
       NAME(trip_wire_on**)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(mdbeam)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(mdgreen)
      
      STATE(INACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(mdlight)
      
      STATE(INACTIVE)
      
      )
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire**)
    
    ANIMATION_NAME(trip_wire_on**)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      OBJECT_ACTIVE_STATE(
       NAME(mdbeam)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(mdgreen)
      
      STATE(ACTIVE)
      
      )
     
     OBJECT_ACTIVE_STATE(
       NAME(mdlight)
      
      STATE(ACTIVE)
      
      )
     
     )
    
    SEQUENCE_DEFINITION(
      NAME(rotatebeam)
     
     WHILE(TRUE)
     
     OBJECT_ROTATE_STATE(
       NAME(mdbeam)
      
      ROTATION(00.000000-7-0.00000000.000000)
      
      )
     
     WAIT(0.000000)
     
     OBJECT_ROTATE_STATE(
       NAME(mdbeam)
      
      ROTATION(00.00000070.00000000.000000)
      
      )
     
     WAIT(0.000000)
     
     END_WHILE()
     
     )
    
    )
   
   ANIMATION_DEFINITION(
     NAME(tripwire01)
    
    ANIMATION_NAME(single_alarm_range)
    
    ACTIVATION(ON_CALL)
    
    SEQUENCE_DEFINITION(
      NAME(check_ranges)
     
     WHILE(TRUE)
     
     IF(
       RANGE_TEST(
        P1(
         NODE(GLOBALplayer)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_on)
      
      )
     
     ELSEIF(
       RANGE_TEST(
        P1(
         NODE(GLOBALBailey)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_on)
      
      )
     
     ELSEIF(
       RANGE_TEST(
        P1(
         NODE(GLOBALHutchins)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_on)
      
      )
     
     ELSEIF(
       RANGE_TEST(
        P1(
         NODE(GLOBALDiMone)
        
        )
       
       P2(
         NODE(LOCALdetector_node)
        
        )
       
       TEST(<)
       
       RANGE(0.000000)
       
       )
      
      )
     
     CALL_ANIMATION(
       NAME(alarm_triggers_on)
      
      )
     
     ENDIF()
     
     WAIT(0.000000)
     
     END_WHILE()
     
     )
    
    )
   
   )
  
  )
 
 )

)

