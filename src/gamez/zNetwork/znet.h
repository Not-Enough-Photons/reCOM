#include "gamez/zValve/zvalve.h"

class CZNetwork;
class CZOnlineLobby;
class CZNetGame;

extern CZNetwork theNetwork;
extern CZOnlineLobby theLobby;

enum MP_MINOR_GAME_STATE
{
	MP_MINOR_UNKNOWN,
	MP_MINOR_NOTREADY,
	MP_MINOR_READY
};

enum MP_MAJOR_GAME_STATE
{
	MP_MAJOR_UNKNOWN,
	MP_MAJOR_MENUS,
	MP_MAJOR_LOADING,
	MP_MAJOR_INPLAY,
	MP_MAJOR_ROUNDOVER,
	MP_MAJOR_NEWROUND,
	MP_MAJOR_GAMEOVER,
	MP_MAJOR_PLAY,
	MP_MAJOR_GAMELOBBY,
	MP_MAJOR_GHOST
};

enum MP_GAME_TYPE
{
	MP_GAME_UNKNOWN,
	MP_GAME_DEFUSE,
	MP_GAME_DEMOLITION,
	MP_GAME_ESCORT,
	MP_GAME_EXTRACT,
	MP_GAME_JAILBREAK,
	MP_GAME_DEATHMATCH,
	MP_GAME_FOOTBOMB
};

enum MP_NET_READY
{
	NET_READY_UNKNOWN,
	NET_READY_WAITING,
	NET_READY_PLAY,
	NET_READY_MENUS
};

enum MP_CONNECTION
{
	USB_MODEM,
	USB_ETHERNET,
	NA_MODEM,
	NA_ETHERNET
};

enum LOBBY_STATE
{
	ROOT_LOBBY_STATE,
	CONNECT_SUCCESS,
	CONNECT_ERROR,
	ACCOUNT_REGISTRATION,
	USER_REGISTRATION,
	SCREENNAME_REGISTRATION,
	REGISTRATION_FAILURE,
	ACCOUNT_LOGIN,
	USER_LOGIN,
	SCREENNAME_LOGIN,
	LOGIN_FAILURE,
	LOBBY_ACTIVE,
	SESSION_BEGIN,
	CREATE_NEW_GAME,
	CREATE_FAILURE,
	JOIN_GAME,
	LOBBY_SERVER_CONNECT,
	READY_TO_CONNECT,
	END_SESSION,
	JOIN_ROOM,
	CREATE_ROOM,
	RETRIEVE_CLAN_INFO,
	MAX_LOBBY_STATES
};

enum class LOBBY_STATE_FLAG
{
	REGISTER,
	ENTRY,
	TICK,
	EXIT,
	UNREGISTER
};

void PTT_HeartbeatPrepare();

class CZNetwork
{
public:
	enum class EVENT
	{
		ONSTART,
		ONEXIT,
		ONACTIVATE,
		ONMPEGEND,
		MP_JOIN_ROOM,
		MP_PLAYER_NOT_FOUND,
		MP_SUCCESS,
		MP_CREATE_CLAN_SUCCESS,
		MP_CREATE_CLAN_FAILURE,
		MP_DISBAND_CLAN_SUCCESS,
		MP_DISBAND_CLAN_FAILURE,
		MP_MEDIUS_ERROR,
		MP_MEDIUS_HAS_INVITES,
		ON_STATE_POP,
		ON_SKB_APPLY,
		ON_SKB_CLOSE,
		ON_LOAD_COMPLETE,
		ON_CLIENT_CONNECT,
		ON_FORCE_NEW_DB,
		ON_LADDER_REFRESH,
		ON_TTY_DONE,
		MP_MEDIUS_JOIN_GAME_FAILURE,
		MP_MEDIUS_READY_TO_CONNECT,
		MP_PLAYER_ALREADY_MEMBER,
		MP_VERSION_NUMBER_ERROR,
		MP_LEADERSHIP_TRANSFER_SUCCESS,
		MEMCARD_ERROR,
		MP_MEDIUS_BECAME_LEADER,
		ON_SKB_CANCEL,
		NETCNF_ERROR,
		MP_MEDIUS_JOIN_ROOM_FAILURE,
		MP_PLAYER_IS_LEADER,
		MP_CLAN_DISBANDED
	};
public:
	float zNetGetTime();
	void zNetUpdate();
	void zNetRequestObjectPrivateOwnership();
};

class CZNetGame
{
public:
	void ResetScores();
	bool OnSealTeam();
public:
	int field_0x93;
	int field55_0x70;
private:
	CValve* mpGameOverValve;
};

class CZNetVoice
{
public:
	void PreTick();
};

class CZOnlineLobby
{
public:
	void Init();
private:
	bool started;
	CValve* onlineStatusValve;
};